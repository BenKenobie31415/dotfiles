#!/usr/bin/env python

from themes import themes
from PIL import Image, ImageShow
import os

theme_images_directory: str = os.path.expandvars('./theme_overview/')
light_foreground_max_index = 5
foreground_max_index: int = 12
text_max_index: int = 15
background_max_index: int = 24


def main() -> None:
    if not os.path.exists(theme_images_directory):
        os.mkdir(theme_images_directory)
    for theme in themes.keys():
        generate_image(theme)


def generate_image(theme_id: str):
    theme = themes[theme_id]
    image = Image.new('RGB', (6, 13), 'black')
    pixels = image.load()
    i = 0
    for color in theme.keys():
        coords = get_coords(i)
        pixels[coords[0], coords[1]] = hex_to_rgb(theme[color])
        i += 1
    image.save(f'{theme_images_directory}{theme_id}.png')


def get_coords(index: int) -> tuple[int, int]:
    if index <= light_foreground_max_index:
        return (0, index)
    if light_foreground_max_index < index <= foreground_max_index:
        return (1, index - (light_foreground_max_index + 1))
    if foreground_max_index < index <= text_max_index:
        return (3, index - (foreground_max_index + 1))
    return (5, index - (text_max_index + 1))


def hex_to_rgb(hex: str):
    hex = hex.lstrip('#')
    rgb_tuple = tuple(int(hex[i:i+2], 16) for i in (0, 2, 4))
    return rgb_tuple


if __name__ == '__main__':
    main()
